name: SonarCloud

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: write

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarCloud scanner and dotnet-coverage
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-coverage

      - name: Restore dependencies
        run: dotnet restore

      - name: Begin SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"YOUR_PROJECT_KEY" \
          /o:"YOUR_ORGANIZATION" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml \
          /d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml \
          /d:sonar.coverage.exclusions="**/Program.cs,**/*Tests.cs,**/obj/**,**/bin/**" \
          /d:sonar.cs.vstest.reportsPaths=TestResults/*.trx

      - name: Build
        run: dotnet build --no-restore

      - name: Test with coverage
        run: |
          dotnet test --no-build --verbosity normal --filter "TestCategory=ContinuousIntegration" --logger "trx;LogFileName=test-results.trx" --results-directory TestResults
          dotnet-coverage collect 'dotnet test --no-build' -f xml -o 'coverage.xml'
          dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      - name: End SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"